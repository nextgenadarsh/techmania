{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Documents/github/techmania/src/routes/qna-game/components/qna/index.js\";\nimport React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\nimport PropTypes from \"prop-types\";\nimport { EMPTY_FUN } from \"../../../../shared/utils/constant\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QnA = ({\n  question,\n  onQuestionSelect\n}) => {\n  const handleOnQuestionSelect = questionId => {\n    onQuestionSelect && onQuestionSelect(questionId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tech-question\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-tags\",\n      onClick: () => handleOnQuestionSelect(question.id),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.q\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: question.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(\"sup\", {\n          className: \"tag\",\n          children: [\"#\", tag]\n        }, tagIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer\",\n      children: question.a && /*#__PURE__*/_jsxDEV(Markdown, {\n        children: question.a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = QnA;\nQnA.propTypes = {\n  question: PropTypes.object.isRequired,\n  onQuestionSelect: PropTypes.func\n};\nQnA.defaultProps = {\n  onQuestionSelect: EMPTY_FUN\n};\nexport default QnA;\n\nvar _c;\n\n$RefreshReg$(_c, \"QnA\");","map":{"version":3,"sources":["/Users/adarsh/Documents/github/techmania/src/routes/qna-game/components/qna/index.js"],"names":["React","Markdown","PropTypes","EMPTY_FUN","QnA","question","onQuestionSelect","handleOnQuestionSelect","questionId","id","q","tags","map","tag","tagIndex","a","propTypes","object","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,mCAA1B;AAEA,OAAO,aAAP;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAoC;AAC9C,QAAMC,sBAAsB,GAAGC,UAAU,IAAI;AAC3CF,IAAAA,gBAAgB,IAAIA,gBAAgB,CAACE,UAAD,CAApC;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,OAAO,EAAE,MAAMD,sBAAsB,CAACF,QAAQ,CAACI,EAAV,CAFvC;AAAA,8BAIE;AAAA,kBACGJ,QAAQ,CAACK;AADZ;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACGL,QAAQ,CAACM,IAAT,CAAcC,GAAd,CAAkB,CAACC,GAAD,EAAMC,QAAN,kBACjB;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,0BACID,GADJ;AAAA,WAA0BC,QAA1B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGT,QAAQ,CAACU,CAAT,iBAAc,QAAC,QAAD;AAAA,kBAAWV,QAAQ,CAACU;AAApB;AAAA;AAAA;AAAA;AAAA;AADjB;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA3BD;;KAAMX,G;AA6BNA,GAAG,CAACY,SAAJ,GAAgB;AACdX,EAAAA,QAAQ,EAAEH,SAAS,CAACe,MAAV,CAAiBC,UADb;AAEdZ,EAAAA,gBAAgB,EAAEJ,SAAS,CAACiB;AAFd,CAAhB;AAKAf,GAAG,CAACgB,YAAJ,GAAmB;AACjBd,EAAAA,gBAAgB,EAAEH;AADD,CAAnB;AAIA,eAAeC,GAAf","sourcesContent":["import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\nimport PropTypes from \"prop-types\";\nimport { EMPTY_FUN } from \"../../../../shared/utils/constant\"\n\nimport \"./index.css\";\n\nconst QnA = ({ question, onQuestionSelect }) => {\n  const handleOnQuestionSelect = questionId => {\n    onQuestionSelect && onQuestionSelect(questionId);\n  };\n\n  return (\n    <div className=\"tech-question\">\n      <div\n        className=\"question-tags\"\n        onClick={() => handleOnQuestionSelect(question.id)}\n      >\n        <h3>\n          {question.q}\n        </h3>\n        <div className=\"tags\">\n          {question.tags.map((tag, tagIndex) => (\n            <sup className=\"tag\" key={tagIndex}>\n              #{tag}\n            </sup>\n          ))}\n        </div>\n      </div>\n      <div className=\"answer\">\n        {question.a && <Markdown>{question.a}</Markdown>}\n      </div>\n    </div>\n  );\n};\n\nQnA.propTypes = {\n  question: PropTypes.object.isRequired,\n  onQuestionSelect: PropTypes.func\n};\n\nQnA.defaultProps = {\n  onQuestionSelect: EMPTY_FUN\n}\n\nexport default QnA;"]},"metadata":{},"sourceType":"module"}