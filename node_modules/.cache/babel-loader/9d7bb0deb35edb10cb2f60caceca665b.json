{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Documents/github/techmania/src/routes/quiz-game/components/quiz/index.js\";\nimport React from \"react\";\nimport { Alphabets } from \"../../utils/alphabets\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = ({\n  quiz,\n  onSelect\n}) => {\n  console.log(quiz);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-serial\",\n      children: [\"#\", quiz.index + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-choices\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        tabindex: \"0\",\n        children: quiz.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choices-container\",\n        children: quiz.choices.map((choice, choiceIndex) => {\n          const containerClasses = [\"choice-container\"];\n\n          if (quiz.selections.indexOf(choiceIndex) > -1) {\n            containerClasses.push(\"selected\");\n          }\n\n          if (quiz.isPass !== undefined) {\n            if (quiz.answers.indexOf(choiceIndex) > -1) {\n              containerClasses.push(\"success\");\n            } else if (quiz.selections.indexOf(choiceIndex) > -1) {\n              containerClasses.push(\"error\");\n            }\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: containerClasses.join(\" \"),\n            tabindex: \"0\",\n            onClick: () => onSelect(choiceIndex),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choice-serial\",\n              children: Alphabets[choiceIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choice-text\",\n              children: choice.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag-label\",\n          children: \"Tags: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), quiz.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag-text\",\n          children: [\"#\", tag, \" \"]\n        }, tag, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), quiz.isPass !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-label\",\n          children: \"Explanation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-text\",\n          children: quiz.help\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/adarsh/Documents/github/techmania/src/routes/quiz-game/components/quiz/index.js"],"names":["React","Alphabets","Quiz","quiz","onSelect","console","log","index","question","choices","map","choice","choiceIndex","containerClasses","selections","indexOf","push","isPass","undefined","answers","join","text","tags","tag","help"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Alphabets } from \"../../utils/alphabets\";\n\nimport \"./index.css\";\n\nconst Quiz = ({ quiz, onSelect }) => {\n  console.log(quiz);\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"question-serial\">#{quiz.index + 1}</div>\n      <div className=\"question-choices\">\n        <div className=\"question\" tabindex=\"0\">\n          {quiz.question}\n        </div>\n        <div className=\"choices-container\">\n          {quiz.choices.map((choice, choiceIndex) => {\n            const containerClasses = [\"choice-container\"];\n            if (quiz.selections.indexOf(choiceIndex) > -1) {\n              containerClasses.push(\"selected\");\n            }\n            if (quiz.isPass !== undefined) {\n              if (quiz.answers.indexOf(choiceIndex) > -1) {\n                containerClasses.push(\"success\");\n              } else if (quiz.selections.indexOf(choiceIndex) > -1) {\n                containerClasses.push(\"error\");\n              }\n            }\n\n            return (\n              <div\n                className={containerClasses.join(\" \")}\n                tabindex=\"0\"\n                onClick={() => onSelect(choiceIndex)}\n              >\n                <div className=\"choice-serial\">{Alphabets[choiceIndex]}</div>\n                <div className=\"choice-text\">{choice.text}</div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"tags-container\">\n          <span className=\"tag-label\">Tags: </span>\n          {quiz.tags.map(tag => (\n            <span key={tag} className=\"tag-text\">\n              #{tag}{\" \"}\n            </span>\n          ))}\n        </div>\n        {quiz.isPass !== undefined && (\n          <div className=\"help-container\">\n            <div className=\"help-label\">Explanation</div>\n            <div className=\"help-text\">{quiz.help}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}